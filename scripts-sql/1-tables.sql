
-- Schéma

DROP SCHEMA IF EXISTS quizzbus CASCADE;
CREATE SCHEMA quizzbus;


-- Tables

CREATE TABLE compte (
	idcompte		INT				GENERATED BY DEFAULT AS IDENTITY,
	nom VARCHAR(50) NOT NULL,
   	prenom VARCHAR(50) NOT NULL,
    date_naissance DATE NOT NULL,
    motdepasse VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    flagAdmin BOOLEAN NOT NULL,
    unique(nom),
    PRIMARY KEY(idcompte)
);

CREATE TABLE Astuce(
   idastuce SERIAL,
   libelle VARCHAR(500) NOT NULL,
   PRIMARY KEY(idastuce)
);

CREATE TABLE Resultat(
   idresultat SERIAL,
   heure TIME NOT NULL,
   score INTEGER NOT NULL,
   PRIMARY KEY(idresultat)
);

CREATE TABLE Poste(
   idposte SERIAL,
   libelle VARCHAR(200) NOT NULL,
   PRIMARY KEY(idposte)
);

CREATE TABLE Question(
   idquestion SERIAL,
   enonce VARCHAR(200) NOT NULL,
   idastuce INTEGER NOT NULL,
   PRIMARY KEY(idquestion),
   FOREIGN KEY(idastuce) REFERENCES Astuce(idastuce)
);

CREATE TABLE Theme(
   idtheme SERIAL,
   nom VARCHAR(100) NOT NULL,
   description TEXT NOT NULL,
   PRIMARY KEY(idtheme)
);

CREATE TABLE Media(
   idmedia SERIAL,
   titre VARCHAR(50) NOT NULL,
   description VARCHAR(50) NOT NULL,
   PRIMARY KEY(idmedia)
);

CREATE TABLE Joueur(
   idjoueur SERIAL,
   ville VARCHAR(50) NOT NULL,
   categorie VARCHAR(50) NOT NULL,
   idposte INTEGER NOT NULL,
   PRIMARY KEY(idjoueur),
   FOREIGN KEY(idposte) REFERENCES Poste(idposte)
);

CREATE TABLE Parcours(
   idparcours SERIAL,
   mode VARCHAR(50) NOT NULL,
   PRIMARY KEY(idparcours)
);

CREATE TABLE Statistique(
   idstat SERIAL,
   libelle VARCHAR(50) NOT NULL,
   PRIMARY KEY(idstat)
);

CREATE TABLE Quiz(
   idquizz SERIAL,
   description VARCHAR(200) NOT NULL,
   idtheme INTEGER NOT NULL,
   PRIMARY KEY(idquizz),
   FOREIGN KEY(idtheme) REFERENCES Theme(idtheme)
);

CREATE TABLE Configuration_Poste(
   idconf SERIAL,
   heure TIME NOT NULL,
   idposte INTEGER NOT NULL,
   PRIMARY KEY(idconf),
   FOREIGN KEY(idposte) REFERENCES Poste(idposte)
);

CREATE TABLE Reponse(
   idreponse SERIAL,
   libelle VARCHAR(100) NOT NULL,
   vraie BOOLEAN NOT NULL,
   PRIMARY KEY(idreponse)
);

CREATE TABLE administrer(
   idcompte INTEGER,
   idposte INTEGER,
   PRIMARY KEY(idcompte, idposte),
   FOREIGN KEY(idcompte) REFERENCES Compte(idcompte),
   FOREIGN KEY(idposte) REFERENCES Poste(idposte)
);

CREATE TABLE elaborer(
   idcompte INTEGER,
   idconf INTEGER,
   PRIMARY KEY(idcompte, idconf),
   FOREIGN KEY(idcompte) REFERENCES Compte(idcompte),
   FOREIGN KEY(idconf) REFERENCES Configuration_Poste(idconf)
);

CREATE TABLE posseder(
   idquizz INTEGER,
   idresultat INTEGER,
   PRIMARY KEY(idquizz, idresultat),
   FOREIGN KEY(idquizz) REFERENCES Quiz(idquizz),
   FOREIGN KEY(idresultat) REFERENCES Resultat(idresultat)
);

CREATE TABLE contenir(
   idquizz INTEGER,
   idquestion INTEGER,
   PRIMARY KEY(idquizz, idquestion),
   FOREIGN KEY(idquizz) REFERENCES Quiz(idquizz),
   FOREIGN KEY(idquestion) REFERENCES Question(idquestion)
);

CREATE TABLE inclure(
   idquestion INTEGER,
   idmedia INTEGER,
   PRIMARY KEY(idquestion, idmedia),
   FOREIGN KEY(idquestion) REFERENCES Question(idquestion),
   FOREIGN KEY(idmedia) REFERENCES Media(idmedia)
);

CREATE TABLE effectuer(
   idquizz INTEGER,
   idjoueur INTEGER,
   PRIMARY KEY(idquizz, idjoueur),
   FOREIGN KEY(idquizz) REFERENCES Quiz(idquizz),
   FOREIGN KEY(idjoueur) REFERENCES Joueur(idjoueur)
);

CREATE TABLE etre_affilier_à(
   idquizz INTEGER,
   idparcours INTEGER,
   PRIMARY KEY(idquizz, idparcours),
   FOREIGN KEY(idquizz) REFERENCES Quiz(idquizz),
   FOREIGN KEY(idparcours) REFERENCES Parcours(idparcours)
);

CREATE TABLE consulter(
   idcompte INTEGER,
   idstat INTEGER,
   PRIMARY KEY(idcompte, idstat),
   FOREIGN KEY(idcompte) REFERENCES Compte(idcompte),
   FOREIGN KEY(idstat) REFERENCES Statistique(idstat)
);

CREATE TABLE generer(
   idresultat INTEGER,
   idstat INTEGER,
   PRIMARY KEY(idresultat, idstat),
   FOREIGN KEY(idresultat) REFERENCES Resultat(idresultat),
   FOREIGN KEY(idstat) REFERENCES Statistique(idstat)
);

