//-------
// Ressources extenres
//-------

plugins {
    id 'application'
    id 'eclipse'
	id 'com.diffplug.eclipse.apt'
	id 'org.openjfx.javafxplugin'  
}

repositories {
    mavenCentral()
	flatDir {
		dirs '../~lib/fonts'
	}
}


//-------
// Java
//-------

// Jar
base.archivesName = 'quizzbus'
version = '2024-06'

application {
	mainClass.set( 'quizzbus.AppliQuizzBus' )
}

// Version de Java
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// Encodage des fichiers
compileJava.options.encoding = 'UTF-8'

// Dossiers sources
sourceSets {
	main.java.srcDirs = ['src']
	main.resources.srcDirs = ['src']
}


//-------
// Dépendances
//-------

javafx {
    version = "21.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing' ]
}

dependencies {
	// https://mvnrepository.com/artifact/de.jensd/fontawesomefx-fontawesome
	implementation 'de.jensd:fontawesomefx-fontawesome:4.7.0-9.1.2'
	implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'	
	implementation 'org.kordamp.ikonli:ikonli-fontawesome-pack:12.3.1'	
	implementation 'org.kordamp.ikonli:ikonli-websymbols-pack:12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-antdesignicons-pack:12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-boxicons-pack:12.3.1'
	implementation project(':~jfox')
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
	
	implementation 'org.postgresql:postgresql:42.7.2'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'net.sf.jasperreports:jasperreports:6.21.2'
	implementation 'net.sf.jasperreports:jasperreports-fonts:6.21.2'
	implementation 'net.sf.jasperreports:jasperreports-metadata:6.21.2'
	implementation 'net.sf.jasperreports:jasperreports-functions:6.21.2'
	implementation 'com.github.librepdf:openpdf:1.4.1'
	

	implementation 'com.google.zxing:core:3.5.3'
	implementation 'net.sf.barcode4j:barcode4j:2.1'
	implementation ('org.apache.xmlgraphics:batik-bridge:1.17') {
		exclude group: 'xml-apis', module: 'xml-apis'
	}
	
	implementation name: 'Font-Arial'
}

configurations.implementation {
	exclude group: 'bouncycastle', module: 'bcmail-jdk14'
	exclude group: 'bouncycastle', module: 'bcprov-jdk14'
}

compileJava {
    inputs.property("moduleName", "jasperreports" )
    inputs.property("moduleName", "batik-bridge" )
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath,
        ]
        classpath = files()  
    }
}


//-------
// Eclipse
//-------

// Nature Gradle
eclipse.project.natures 'org.eclipse.buildship.core.gradleprojectnature'

// Dossier de sortie
eclipse.classpath.defaultOutputDir = file('build/bin') 
eclipse.classpath.file.whenMerged { 
	entries.each { 
		entry -> if (entry.kind == 'src' && entry.hasProperty('output')) {
			entry.output = null
		}
	}
}
delete 'bin'


// Utilisation des modules Java
eclipse.classpath.file.whenMerged { 
	entries.each { 
		entry -> if (entry.kind == 'lib' || entry.kind == 'src' || entry.kind == 'con') {
			entry.entryAttributes['module'] = 'true' 
		}
	}
}

// Dossier de sortie du processeur d'annotations
mkdir( 'build/apt_generated' )
eclipse.jdt.apt.genSrcDir='build/apt_generated'
eclipse.classpath.file.whenMerged { cp ->
	cp.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/apt_generated', null) )
}


//-------
// Tâches auxiliaires
//-------

// Copie les dépendances

task copyDep() {
	delete("${buildDir}/dependencies")
	copy {
		from configurations.runtimeClasspath 
		into 'build/dependencies'
	}
}

